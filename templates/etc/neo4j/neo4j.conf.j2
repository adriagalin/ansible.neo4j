{{ ag_neo4j_ansible_managed }}
#*****************************************************************
# Neo4j configuration
#
# For more details and a complete list of settings, please see
# https://neo4j.com/docs/operations-manual/current/reference/configuration-settings/
#*****************************************************************

# The name of the database to mount
dbms.active_database={{ ag_neo4j_dbms_active_database }}

# Paths of directories in the installation.
dbms.directories.data={{ ag_neo4j_dbms_directories_data }}
dbms.directories.plugins={{ ag_neo4j_dbms_directories_plugins }}
dbms.directories.certificates={{ ag_neo4j_dbms_directories_certificates }}
dbms.directories.logs={{ ag_neo4j_dbms_directories_logs }}
dbms.directories.lib={{ ag_neo4j_dbms_directories_lib }}
dbms.directories.run={{ ag_neo4j_dbms_directories_run }}

# This setting constrains all `LOAD CSV` import files to be under the `import` directory. Remove or comment it out to
# allow files to be loaded from anywhere in the filesystem; this introduces possible security problems. See the
# `LOAD CSV` section of the manual for details.
dbms.directories.import={{ ag_neo4j_dbms_directories_import }}

{% if ag_neo4j_dbms_security_auth_enabled is defined %}
# Whether requests to Neo4j are authenticated.
# To disable authentication, uncomment this line
dbms.security.auth_enabled={{ ag_neo4j_dbms_security_auth_enabled }}
{% endif %}

{% if ag_neo4j_dbms_allow_format_migration is defined %}
# Enable this to be able to upgrade a store from an older version.
dbms.allow_format_migration={{ ag_neo4j_dbms_allow_format_migration }}
{% endif %}

{% if ag_neo4j_dbms_memory_heap_initial_size is defined and ag_neo4j_dbms_memory_heap_max_size is defined %}
# Java Heap Size: by default the Java heap size is dynamically
# calculated based on available system resources.
# Uncomment these lines to set specific initial and maximum
# heap size.
dbms.memory.heap.initial_size={{ ag_neo4j_dbms_memory_heap_initial_size }}
dbms.memory.heap.max_size={{ ag_neo4j_dbms_memory_heap_max_size }}
{% endif %}

{% if ag_neo4j_dbms_memory_pagecache_size is defined %}
# The amount of memory to use for mapping the store files, in bytes (or
# kilobytes with the 'k' suffix, megabytes with 'm' and gigabytes with 'g').
# If Neo4j is running on a dedicated server, then it is generally recommended
# to leave about 2-4 gigabytes for the operating system, give the JVM enough
# heap to hold all your transaction state and query context, and then leave the
# rest for the page cache.
# The default page cache memory assumes the machine is dedicated to running
# Neo4j, and is heuristically set to 50% of RAM minus the max Java heap size.
dbms.memory.pagecache.size={{ ag_neo4j_dbms_memory_pagecache_size }}
{% endif %}

#*****************************************************************
# Network connector configuration
#*****************************************************************

{% if ag_neo4j_dbms_connectors_default_listen_address is defined %}
# With default configuration Neo4j only accepts local connections.
# To accept non-local connections, uncomment this line:
dbms.connectors.default_listen_address={{ ag_neo4j_dbms_connectors_default_listen_address }}

# You can also choose a specific network interface, and configure a non-default
# port for each connector, by setting their individual listen_address.
{% endif %}

{% if ag_neo4j_dbms_connectors_default_advertised_address is defined %}
# The address at which this server can be reached by its clients. This may be the server's IP address or DNS name, or
# it may be the address of a reverse proxy which sits in front of the server. This setting may be overridden for
# individual connectors below.
dbms.connectors.default_advertised_address={{ ag_neo4j_dbms_connectors_default_advertised_address }}

# You can also choose a specific advertised hostname or IP address, and
# configure an advertised port for each connector, by setting their
# individual advertised_address.
{% endif %}

# Bolt connector
dbms.connector.bolt.enabled={{ ag_neo4j_dbms_connector_bolt_enabled }}
{% if ag_neo4j_dbms_connector_bolt_tls_level is defined %}
#dbms.connector.bolt.tls_level={{ ag_neo4j_dbms_connector_bolt_tls_level }}
{% endif %}
{% if ag_neo4j_dbms_connector_bolt_listen_address is defined %}
dbms.connector.bolt.listen_address={{ ag_neo4j_dbms_connector_bolt_listen_address }}
{% endif %}

# HTTP Connector. There must be exactly one HTTP connector.
dbms.connector.http.enabled={{ ag_neo4j_dbms_connector_http_enabled }}
{% if ag_neo4j_dbms_connector_http_listen_address is defined %}
dbms.connector.http.listen_address={{ ag_neo4j_dbms_connector_http_listen_address }}
{% endif %}

# HTTPS Connector. There can be zero or one HTTPS connectors.
dbms.connector.https.enabled={{ ag_neo4j_dbms_connector_https_enabled }}
{% if ag_neo4j_dbms_connector_https_listen_address is defined %}
dbms.connector.https.listen_address={{ ag_neo4j_dbms_connector_https_listen_address }}
{% endif %}

{% if ag_neo4j_dbms_connector_https_listen_address is defined %}
# Number of Neo4j worker threads.
dbms.threads.worker_count={{ ag_neo4j_dbms_threads_worker_count }}
{% endif %}

#*****************************************************************
# SSL system configuration
#*****************************************************************

# Names of the SSL policies to be used for the respective components.

# The legacy policy is a special policy which is not defined in
# the policy configuration section, but rather derives from
# dbms.directories.certificates and associated files
# (by default: neo4j.key and neo4j.cert). Its use will be deprecated.

# The policies to be used for connectors.
#
# N.B: Note that a connector must be configured to support/require
#      SSL/TLS for the policy to actually be utilized.
#
# see: dbms.connector.*.tls_level

{% if ag_neo4j_bolt_ssl_policy is defined %}
bolt.ssl_policy={{ ag_neo4j_bolt_ssl_policy }}
{% endif %}
{% if ag_neo4j_https_ssl_policy is defined %}
https.ssl_policy={{ ag_neo4j_https_ssl_policy }}
{% endif %}

#*****************************************************************
# SSL policy configuration
#*****************************************************************

{% if ag_neo4j_dbms_ssl_policy_default_base_directory is defined %}
# Each policy is configured under a separate namespace, e.g.
#    dbms.ssl.policy.<policyname>.*
#
# The example settings below are for a new policy named 'default'.

# The base directory for cryptographic objects. Each policy will by
# default look for its associated objects (keys, certificates, ...)
# under the base directory.
#
# Every such setting can be overriden using a full path to
# the respective object, but every policy will by default look
# for cryptographic objects in its base location.
#
# Mandatory setting

dbms.ssl.policy.default.base_directory={{ ag_neo4j_dbms_ssl_policy_default_base_directory }}
{% endif %}

{% if ag_neo4j_dbms_ssl_policy_default_allow_key_generation is defined %}
# Allows the generation of a fresh private key and a self-signed
# certificate if none are found in the expected locations. It is
# recommended to turn this off again after keys have been generated.
#
# Keys should in general be generated and distributed offline
# by a trusted certificate authority (CA) and not by utilizing
# this mode.

dbms.ssl.policy.default.allow_key_generation={{ ag_neo4j_dbms_ssl_policy_default_allow_key_generation }}
{% endif %}

{% if ag_neo4j_dbms_ssl_policy_default_trust_all is defined %}
# Enabling this makes it so that this policy ignores the contents
# of the trusted_dir and simply resorts to trusting everything.
#
# Use of this mode is discouraged. It would offer encryption but no security.

dbms.ssl.policy.default.trust_all={{ ag_neo4j_dbms_ssl_policy_default_trust_all }}
{% endif %}

{% if ag_neo4j_dbms_ssl_policy_default_private_key is defined %}
# The private key for the default SSL policy. By default a file
# named private.key is expected under the base directory of the policy.
# It is mandatory that a key can be found or generated.

dbms.ssl.policy.default.private_key={{ ag_neo4j_dbms_ssl_policy_default_private_key }}
{% endif %}

{% if ag_neo4j_dbms_ssl_policy_default_public_key is defined %}
# The private key for the default SSL policy. By default a file
# named public.crt is expected under the base directory of the policy.
# It is mandatory that a certificate can be found or generated.

dbms.ssl.policy.default.public_certificate={{ ag_neo4j_dbms_ssl_policy_default_public_key }}
{% endif %}

{% if ag_neo4j_dbms_ssl_policy_default_trusted_dir is defined %}
# The certificates of trusted parties. By default a directory named
# 'trusted' is expected under the base directory of the policy. It is
# mandatory to create the directory so that it exists, because it cannot
# be auto-created (for security purposes).
#
# To enforce client authentication client_auth must be set to 'require'!

dbms.ssl.policy.default.trusted_dir={{ ag_neo4j_dbms_ssl_policy_default_trusted_dir }}
{% endif %}

{% if ag_neo4j_dbms_ssl_policy_default_client_auth is defined %}
# Client authentication setting. Values: none, optional, require
# The default is to require client authentication.
#
# Servers are always authenticated unless explicitly overridden
# using the trust_all setting. In a mutual authentication setup this
# should be kept at the default of require and trusted certificates
# must be installed in the trusted_dir.

dbms.ssl.policy.default.client_auth={{ ag_neo4j_dbms_ssl_policy_default_client_auth }}
{% endif %}

{% if ag_neo4j_dbms_ssl_policy_default_tls_versions is defined %}
# A comma-separated list of allowed TLS versions.
# By default TLSv1, TLSv1.1 and TLSv1.2 are allowed.

dbms.ssl.policy.default.tls_versions={{ ag_neo4j_dbms_ssl_policy_default_tls_versions }}
{% endif %}

{% if ag_neo4j_dbms_ssl_policy_default_tls_versions is defined %}
# A comma-separated list of allowed ciphers.
# The default ciphers are the defaults of the JVM platform.

dbms.ssl.policy.default.ciphers={{ ag_neo4j_dbms_ssl_policy_default_ciphers }}
{% endif %}

#*****************************************************************
# Logging configuration
#*****************************************************************

{% if ag_neo4j_dbms_logs_http_enabled is defined %}
# To enable HTTP logging, uncomment this line
dbms.logs.http.enabled={{ ag_neo4j_dbms_logs_http_enabled }}
{% endif %}

{% if ag_neo4j_dbms_logs_http_rotation_keep_number is defined %}
# Number of HTTP logs to keep.
dbms.logs.http.rotation.keep_number={{ ag_neo4j_dbms_logs_http_rotation_keep_number }}
{% endif %}

{% if ag_neo4j_dbms_logs_http_rotation_size is defined %}
# Size of each HTTP log that is kept.
#dbms.logs.http.rotation.size={{ ag_neo4j_dbms_logs_http_rotation_size }}
{% endif %}

{% if ag_neo4j_dbms_logs_gc_enabled is defined %}
# To enable GC Logging, uncomment this line
dbms.logs.gc.enabled={{ ag_neo4j_dbms_logs_gc_enabled }}
{% endif %}

{% if ag_neo4j_dbms_logs_gc_options is defined %}
# GC Logging Options
# see http://docs.oracle.com/cd/E19957-01/819-0084-10/pt_tuningjava.html#wp57013 for more information.
dbms.logs.gc.options={{ ag_neo4j_dbms_logs_gc_options }}
{% endif %}

{% if ag_neo4j_dbms_logs_gc_rotation_keep_number is defined %}
# Number of GC logs to keep.
dbms.logs.gc.rotation.keep_number={{ ag_neo4j_dbms_logs_gc_rotation_keep_number }}
{% endif %}

{% if ag_neo4j_dbms_logs_gc_rotation_size is defined %}
# Size of each GC log that is kept.
dbms.logs.gc.rotation.size={{ ag_neo4j_dbms_logs_gc_rotation_size }}
{% endif %}

{% if ag_neo4j_dbms_logs_debug_rotation_size is defined %}
# Size threshold for rotation of the debug log. If set to zero then no rotation will occur. Accepts a binary suffix "k",
# "m" or "g".
dbms.logs.debug.rotation.size={{ ag_neo4j_dbms_logs_debug_rotation_size }}
{% endif %}

{% if ag_neo4j_dbms_logs_debug_rotation_keep_number is defined %}
# Maximum number of history files for the internal log.
dbms.logs.debug.rotation.keep_number={{ ag_neo4j_dbms_logs_debug_rotation_keep_number }}
{% endif %}

#*****************************************************************
# Miscellaneous configuration
#*****************************************************************

{% if ag_neo4j_cypher_default_language_version is defined %}
# Enable this to specify a parser other than the default one.
cypher.default_language_version={{ ag_neo4j_cypher_default_language_version }}
{% endif %}

{% if ag_neo4j_dbms_security_allow_csv_import_from_file_urls is defined %}
# Determines if Cypher will allow using file URLs when loading data using
# `LOAD CSV`. Setting this value to `false` will cause Neo4j to fail `LOAD CSV`
# clauses that load data from the file system.
#dbms.security.allow_csv_import_from_file_urls={{ ag_neo4j_dbms_security_allow_csv_import_from_file_urls }}
{% endif %}

{% if ag_neo4j_dbms_tx_log_rotation_retention_policy is defined %}
# Retention policy for transaction logs needed to perform recovery and backups.
dbms.tx_log.rotation.retention_policy={{ ag_neo4j_dbms_tx_log_rotation_retention_policy }}
{% endif %}

{% if ag_neo4j_dbms_shell_enabled is defined %}
# Enable a remote shell server which Neo4j Shell clients can log in to.
dbms.shell.enabled={{ ag_neo4j_dbms_shell_enabled }}
{% endif %}
{% if ag_neo4j_dbms_shell_host is defined %}
# The network interface IP the shell will listen on (use 0.0.0.0 for all interfaces).
dbms.shell.host={{ ag_neo4j_dbms_shell_host }}
{% endif %}
{% if ag_neo4j_dbms_shell_port is defined %}
# The port the shell will listen on, default is 1337.
dbms.shell.port={{ ag_neo4j_dbms_shell_port }}
{% endif %}

{% if ag_neo4j_dbms_read_only is defined %}
# Only allow read operations from this Neo4j instance. This mode still requires
# write access to the directory for lock purposes.
dbms.read_only={{ ag_neo4j_dbms_read_only }}
{% endif %}

{% if ag_neo4j_dbms_unmanaged_extension_classes is defined %}
# Comma separated list of JAX-RS packages containing JAX-RS resources, one
# package name for each mountpoint. The listed package names will be loaded
# under the mountpoints specified. Uncomment this line to mount the
# org.neo4j.examples.server.unmanaged.HelloWorldResource.java from
# neo4j-server-examples under /examples/unmanaged, resulting in a final URL of
# http://localhost:7474/examples/unmanaged/helloworld/{nodeId}
dbms.unmanaged_extension_classes={{ ag_neo4j_dbms_unmanaged_extension_classes }}
{% endif %}

#********************************************************************
# JVM Parameters
#********************************************************************

{% for additional in ag_neo4j_dbms_jvm_additional %}
dbms.jvm.additional={{ additional }}
{% endfor %}

{% if ag_neo4j_dbms_jvm_additional_remote is defined and ag_neo4j_dbms_jvm_additional_remote|length  > 0 %}
# Remote JMX monitoring, uncomment and adjust the following lines as needed. Absolute paths to jmx.access and
# jmx.password files are required.
# Also make sure to update the jmx.access and jmx.password files with appropriate permission roles and passwords,
# the shipped configuration contains only a read only role called 'monitor' with password 'Neo4j'.
# For more details, see: http://download.oracle.com/javase/8/docs/technotes/guides/management/agent.html
# On Unix based systems the jmx.password file needs to be owned by the user that will run the server,
# and have permissions set to 0600.
# For details on setting these file permissions on Windows see:
#     http://docs.oracle.com/javase/8/docs/technotes/guides/management/security-windows.html
{% for additional in ag_neo4j_dbms_jvm_additional_remote %}
dbms.jvm.additional={{ additional }}
{% endfor %}
{% endif %}

#********************************************************************
# Wrapper Windows NT/2000/XP Service Properties
#********************************************************************
# WARNING - Do not modify any of these properties when an application
#  using this configuration file has been installed as a service.
#  Please uninstall the service before modifying this section.  The
#  service can then be reinstalled.

# Name of the service
dbms.windows_service_name={{ ag_neo4j_dbms_windows_service_name }}

#********************************************************************
# Other Neo4j system properties
#********************************************************************
{% for additional in ag_neo4j_dbms_jvm_additional_remote %}
dbms.jvm.additional={{ additional }}
{% endfor %}
